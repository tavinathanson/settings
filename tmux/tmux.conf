# Modern tmux configuration with vim integration and OSC52 support
# Works seamlessly with Neovim for unified navigation and clipboard

# Set prefix to Ctrl-a (more ergonomic than Ctrl-b)
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Enable true color support
set-option -sa terminal-overrides ',xterm-256color:RGB'
set-option -ga terminal-overrides ',*:Tc'
set -g default-terminal "tmux-256color"

# Enable mouse support for resizing panes and scrolling
set -g mouse on

# Set scrollback buffer size
set -g history-limit 50000

# Enable focus events (needed for vim autoread)
set -g focus-events on

# Start windows and panes at 1, not 0 (more intuitive)
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when one is closed
set -g renumber-windows on

# Set escape time to 0 for vim responsiveness
set -sg escape-time 0

# Enable vi mode for copy mode
setw -g mode-keys vi

# OSC52 clipboard integration
# Allow programs to access clipboard (critical for remote sessions)
set -g set-clipboard on
# Allow terminal apps to set clipboard via OSC52
set -g allow-passthrough on

# Allow tmux to set the terminal title
set -g set-titles on
set -g set-titles-string '#H ❐ #S ● #I #W'

# Status bar configuration
set -g status-position bottom
set -g status-interval 1
set -g status-style 'bg=colour235 fg=colour250'
set -g status-left '#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour235] '
set -g status-right '#[fg=colour240]#[fg=colour233,bg=colour240] %H:%M:%S #[fg=colour245]#[fg=colour232,bg=colour245] #H '
set -g status-left-length 20
set -g status-right-length 50

# Window status
setw -g window-status-format '#[fg=colour240] #I:#W '
setw -g window-status-current-format '#[fg=colour232,bg=colour39] #I:#W#F '

# Pane borders
set -g pane-border-style 'fg=colour240'
set -g pane-active-border-style 'fg=colour39'

# Display panes timeout
set -g display-panes-time 2000

# vim-tmux-navigator integration
# Smart pane switching with awareness of vim splits
# Use C-hjkl to navigate between tmux panes and vim splits seamlessly
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# Also bind in copy mode
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R


# Better split commands
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Clear current pane with Ctrl-a k (lowercase)
bind k send-keys -R \; send-keys C-l \; clear-history
unbind '"'
unbind %

# Easy config reload
bind r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded"

# Copy mode improvements
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Quick window navigation
bind -r C-h previous-window
bind -r C-n next-window  # Changed from C-l to C-n to avoid conflicts

# Resize panes with vim-like keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Toggle synchronize panes (useful for running same command across panes)
bind S setw synchronize-panes \; display-message "Synchronize panes: #{?pane_synchronized,ON,OFF}"

# Quick pane cycling
bind -r Tab select-pane -t :.+

# Better pane management
bind q display-panes
bind x kill-pane
bind X kill-window

# Kill session shortcuts - using double capital Q to prevent accidents
bind Q confirm-before -p "Kill session #S? (y/n)" kill-session  # Kill with confirmation
bind C-Q kill-session                        # Force kill (harder to hit accidentally)

# Create new window with current path
bind c new-window -c "#{pane_current_path}"

# Move windows left/right
bind -r < swap-window -t -1 \; select-window -t -1
bind -r > swap-window -t +1 \; select-window -t +1

# Plugin manager - TPM (Tmux Plugin Manager)
# Check if TPM is installed
if-shell "test ! -d ~/.tmux/plugins/tpm" \
  'display-message -p "WARNING: TPM not installed! Install with: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm" ; \
   display-message -p "After installing, press Ctrl-a + I to install plugins"'

# TPM plugin declarations
set -g @plugin 'tmux-plugins/tpm'

# Essential plugins
set -g @plugin 'tmux-plugins/tmux-sensible'      # Sensible defaults
set -g @plugin 'tmux-plugins/tmux-resurrect'     # Save/restore sessions
set -g @plugin 'tmux-plugins/tmux-continuum'     # Auto save/restore
set -g @plugin 'tmux-plugins/tmux-yank'          # Better copy/paste
set -g @plugin 'tmux-plugins/tmux-open'          # Open URLs/files from copy mode
set -g @plugin 'tmux-plugins/tmux-copycat'       # Better search in copy mode
set -g @plugin 'tmux-plugins/tmux-prefix-highlight' # Show prefix key in statusline

# Resurrect settings - restore vim sessions and pane contents
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# Continuum settings - automatic restore
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15' # Save every 15 minutes

# Prefix highlight settings
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_prefix_prompt 'Prefix'
set -g @prefix_highlight_copy_prompt 'Copy'

# Update status right to include prefix highlight and TPM warning
# Show warning if TPM is not installed
if-shell "test ! -d ~/.tmux/plugins/tpm" \
  'set -g status-right "#[fg=red,bold]TPM NOT INSTALLED #[default]#[fg=colour240]#[fg=colour233,bg=colour240] %H:%M:%S #[fg=colour245]#[fg=colour232,bg=colour245] #H "' \
  'set -g status-right "#{prefix_highlight} #[fg=colour240]#[fg=colour233,bg=colour240] %H:%M:%S #[fg=colour245]#[fg=colour232,bg=colour245] #H "'

# Initialize TPM (keep this line at the very bottom of tmux.conf)
# Only run if TPM is installed to avoid errors
if-shell "test -d ~/.tmux/plugins/tpm" \
  'run ~/.tmux/plugins/tpm/tpm' \
  'display-message "Skipping plugin loading - TPM not installed"'